//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, EnumIter, DeriveActiveEnum, Eq)]
#[sea_orm(rs_type = "String", db_type = "Enum")]
pub enum ActionType {
    #[sea_orm(string_value = "SendMessage")]
    SendMessage,
    #[sea_orm(string_value = "EditMessage")]
    EditMessage,
    #[sea_orm(string_value = "CreateSurvey")]
    CreateSurvey,
    #[sea_orm(string_value = "ResolveSurvey")]
    ResolveSurvey,
}

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "scheduled_action")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub event_id: i64,
    pub time: DateTimeWithTimeZone,
    pub executed: bool,
    #[sea_orm(column_type = "Text")]
    pub action_type: ActionType,
    #[sea_orm(column_type = "JsonBinary")]
    pub action_data: Json,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::event::Entity",
        from = "Column::EventId",
        to = "super::event::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Event,
}

impl Related<super::event::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Event.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
