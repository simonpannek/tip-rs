//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "survey_response")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub question_id: i64,
    pub user_id: i64,
    #[sea_orm(column_type = "Text")]
    pub response: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::survey_question::Entity",
        from = "Column::QuestionId",
        to = "super::survey_question::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    SurveyQuestion,
    #[sea_orm(
        belongs_to = "super::user::Entity",
        from = "Column::UserId",
        to = "super::user::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    User,
}

impl Related<super::survey_question::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SurveyQuestion.def()
    }
}

impl Related<super::user::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::User.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
